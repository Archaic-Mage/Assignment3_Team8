CHIP WTM8bu {
    IN x[8], y[8];
    OUT isoverflow, z[8];

    PARTS:

    //First we genarate the 8 bit products 

    And8bw1b(a = x, b = y[0], out = p0);
    And8bw1b(a = x, b = y[1], out = p1);
    And8bw1b(a = x, b = y[2], out = p2);
    And8bw1b(a = x, b = y[3], out = p3);
    And8bw1b(a = x, b = y[4], out = p4);
    And8bw1b(a = x, b = y[5], out = p5);
    And8bw1b(a = x, b = y[6], out = p6);
    And8bw1b(a = x, b = y[7], out = p7);
    COMP2S(a=p7, b[0]=b0, b[1]=b1, b[2]=b2, b[3]=b3, b[4]=b4, b[5]=b5, b[6]=b6, b[7]=b7);   

    /**this is level 0**/

    //we add PP0, PP1, PP2

    LevelAdd(p[0..7] = p0, p[8] =x[7].y[0], p[9] =x[7].y[0], p[10] =x[7].y[0], p[11] =x[7].y[0], p[12] =x[7].y[0], p[13] =x[7].y[0], p[14] =x[7].y[0], p[15] =x[7].y[0], q[0] = false, q[1..8] = p1,  q[9] = x[7].y[1], q[10] = x[7].y[1], q[11] = x[7].y[1], q[12] = x[7].y[1], q[13] = x[7].y[1], q[14] = x[7].y[1], q[15] = x[7].y[1], r[0..1] = false, r[2..9] = p2, r[10] = x[7].y[2], r[11] = x[7].y[2], r[12] = x[7].y[2], r[13] = x[7].y[2], r[14] = x[7].y[2], r[15] = x[7].y[2], isoverflow = of0, c = c10, s = s10);
    
    //we add PP3, PP4, PP5

    LevelAdd(p[0..2] = false, p[3..10] = p3, p[11] =x[7].y[3], p[12] =x[7].y[3], p[13] =x[7].y[3], p[14] =x[7].y[3], p[15] =x[7].y[3], q[0..3] = false, q[4..11] = p4, q[12] =x[7].y[4], q[13] =x[7].y[4], q[14] =x[7].y[4], q[15] =x[7].y[4], r[0..4] = false, r[5..12] = p5, r[13] = x[7].y[5], r[14] = x[7].y[5], r[15] = x[7].y[5], isoverflow = of1, c = c11, s = s11);


    /**this is level 1 - PP6, PP7 are add in this level **/

    LevelAdd(p = c10, q = s10, r = c11, isoverflow = of2, c = c20, s = s20); //we the saved carry and sum

    //we now add PP6, PP7

    LevelAdd(p = s11, q[0..5] = false, q[6..13] = p6, q[14] = x[7].y[6], q[15] = x[7].y[6], r[0..6] = false, r[7] = b0, r[8] = b1, r[9] = b2, r[10] = b3, r[11] = b4, r[12] = b5, r[13] = b6, r[14] = b7, r[15] = x[7].y[7], isoverflow = of3, c = c21, s = s21);

    /**this is level 2**/

    //c20, s20, c21 are added and s21 is sent to next level

    LevelAdd(p = c20, q = s20, r = c21, isoverflow = of4, c = c30, s = s30);

    /**this is level 3**/

    LevelAdd(p = c30, q = s30, r = s21, isoverflow = of5, c = c40, s = s40);

    /**At this level we use 16-bit CLA based adder**/

    CLA4bH16buA(x = c40, y = s40, AS = false, z[0..7] = z, z[8..15] = overflow);


    // Now, we check wether there is overflow or not

    checkOverflow(in = overflow, out = isoverflow);


}